plugins:
  - serverless-deployment-bucket

service: poc-apigw-s3-proxy

frameworkVersion: ">=2.46.0"

custom:
  profiles: ${file(./sls-local.yml):profiles}

provider:
  name: aws
  runtime: nodejs14.x
  profile: ${self:custom.profiles.${opt:stage}}
  deploymentBucket:
    name: serverless-deploy-20210613
    serverSideEncryption: AES256
  region: us-east-2
  environment:
    ENV_VAR: test
  lambdaHashingVersion: 20201221

functions:
  get:
    role: lambdaRole
    handler: index.handle
    events:
      - http:
          path: api/config/{name}
          method: get
          cors: true
      - http:
          path: api/config/{name}
          method: patch
          cors: true

resources:
  Resources:
    lambdaRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: poc-apigw-s3-proxy-lambda-role # required if you want to use 'serverless deploy --function' later on
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: lambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        -
                          - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
#                -  Effect: 'Allow'
#                   Action:
#                     - 's3:GetObject'
#                     - 's3:ListBucket'
#                   Resource:
#                     Fn::Join:
#                       - ""
#                       - - "arn:aws:s3:::"
#                         - "Ref" : "${file(./config.${opt:stage, 'dev'}.yml):READ_S3_BUCKET}"
